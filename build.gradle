buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")

	}
}



plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'application'
	id 'jacoco'

}
apply plugin: 'java'
apply plugin: "jacoco"
repositories {
	mavenCentral()
}

group = 'com.mercadolibre'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-security'


	compile group: 'com.github.derjust', name: 'spring-data-dynamodb', version: '5.1.0'

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.junit.jupiter:junit-jupiter-engine:5.2.0')






}

tasks.named('test') {
	useJUnitPlatform()
}


sourceCompatibility = 11
targetCompatibility = 11


def jacocoExcludes = []
def jacocoIncludes = []

jacoco {
	toolVersion = "0.8.5"
}

jacocoTestReport {

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ['**/repository/**',
							  '**/config/**',



					])
		}))
	}

	reports {
		html.enabled = true
		xml.enabled = true
		xml.setDestination(file("CCReport43F6D5EF/summary.xml"))
		html.setDestination(file("CCReport43F6D5EF"))
	}
}

test {
	finalizedBy jacocoTestReport
	jacoco {

		destinationFile = file("CCReport43F6D5EF/jacoco.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'


